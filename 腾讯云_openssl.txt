OpenSSL 是一个免费开源的库，它提供了一些处理数字证书的命令行工具。其中一些工具可以用作证书颁发机构(Certificate Authority 即 CA)。
证书颁发机构(CA)是签署数字证书的实体。许多网站需要让他们的客户知道连接是安全的，所以需要从一个被广泛信任的CA(例如VeriSign, DigiCert)来为他们的域名签署证书，也就是我们常说的 HTTPS 证书。
本系列文章的目的不是让你创建像 VeriSign 那样的 CA 机构。在很多情况下，我们需要在公司局域网内的网站中启用 HTTPS，比如测试环境，或者是公司内网中的管理系统(现在主流的浏览器都把 HTTP 站点标记为不安全)。此时通过 OpenSSL 创建私有 CA 并颁发证书就是很好的选择了。
本系列分为三篇文章，即本文《使用 OpenSSL 创建私有 CA：1 根证书》后续的《使用 OpenSSL 创建私有 CA：2 中间证书》和《使用 OpenSSL 创建私有 CA：3 用户证书》。
OpenSSL 程序提供了一个默认的配置文件：/etc/ssl/openssl.cnf，但是由于我们自定义的内容比较多，所以干脆创建一个套单独的配置文件。创建文件 rootca/rootca.cnf

这是一个非常重要的配置文件，指定了很多配置的目录，其中最重要的一个已经被抽取成了变量 dir。我们要做的就是指定 dir 的路径，并且根据下面的步骤来创建其余的目录和文件。
为了把创建证书的过程也自动化掉，笔者在 req 段添加了下面的配置：

[ req ]
prompt = no
input_password = 123456
其中的 123456 就是后面创建的秘钥的密码，这样在创建 Certificate Signing Requests(csr) 时就不需要以交互的方式输入密码了。

有了前一步中生成的 csr，我们就可以通过下面的命令生成 CA 的根证书了：

在交互式的提示中输入私钥的之前设置的密码 123456，并同意其它的确认提示，就完成了根证书的生成操作。注意，上面命令中的 -selfsing 选项，
它说明所有的根证书都是自签名的。同样，我们也可以通过命令来查看证书的详细信息：
为什么要创建中间证书？
使用 CA 的根证书是可以直接签发用户证书的，那么为什么还还要创建中间证书呢？
大概有两个原因：

安全性
建立中间证书颁发机构(CA)
先说安全性，通过签发中间证书，再用中间证书签发用户证书的方式，可以最大程度的减少更证书的使用频率，甚至可以离线保存根证书。如果发现中间证书被破坏，还可以吊销该中间证书并颁发新的中间证书。
再来说说中间证书颁发机构(CA)，一个中间证书颁发机构(CA)是一个实体，它具有根 CA 颁发的中间证书，并且可以代表根 CA 颁发用户证书，从而形成一条被信任的证书链。
这里有必要介绍下证书产业的基本玩法：首先根证书的所有者(大的证书厂商)会和 OS 厂商合作，让 OS 等环境默认信任自己的根证书。然后根证书的所有者会签发中间证书卖给小一些的证书厂商。这些小的证书厂商再用中间证书创建最终证书卖给普通消费者。
举个例子，像我们常用的 Windows 操作系统默认就信任了很多厂商的根证书，比如 VeriSign 的证书，并且这些证书还会随着 Windows 系统的更新而更新：



上图中，VeriSign 是根证书所有者，你安装 windows 操作系统时，VeriSign 的根证书就被安装到信任列表中了。Symantec Class 3 SHA256 Code Signing CA 则是 Symantec 公司从 VeriSign 公司购买的中间证书。GrapeCity inc. 则是 GrapeCity 公司从 Symantec 公司购买的最终证书用来对产品进行签名。当然，有时候根证书厂商比如 VeriSign 等也会直接向最终用户销售证书。

为了模拟中间证书颁发机构(CA)，本文将使用前文中创建的根证书创建一个名称为 power 的中间证书。
